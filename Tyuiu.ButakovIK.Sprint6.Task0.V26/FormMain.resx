<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxFormula_BIK.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHoAAAA/CAYAAAAvzNw7AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA91JREFUeF7tmsGR4jAQRcmEUAiFUAiFUMhkyWFPc2Przdbf6hUtS5bkwaA+vMK2
        JI/cT90WM3P49fvrEXw+IXoSQvQkhOhJCNGTEKInIURPQoiehBDdwO12e1wul2/O5/Pjfr+7/fZEiG4A
        wTq+Xq/fsm37HgnRKyF7D4fDvyzm83g8PvXbGyG6AUq3PT6dTv+175EQ3Qll24rfKyG6A97P4LXtjRDd
        CFmsTI5d94eCWJvJ75DVIboBdtnsvMVWX69YUKM2eiF6hyBYv4yxX+V6CNE/BLLWZj57gBD9ZrRIC9GD
        IaBsqCiX9njkuzdEvxiCaHfNCizXRv7GK0S/GBtEArvVrzND9I6gXNu/TPVA2bewgJCWXl/6eSF6I5BB
        cHU+IsAiMvrFIJf3McEkqLpu39sjCNEvRuUTsQTWHnv9W1kjjT7Mg7kxplTia9hMdO/EQA/stb0bI7Oz
        hU1EswJHPZCyzGt7J4jHVjv6GoaLpuyNFjNy4czKcNH8ZWe0FLL6ldnwCbiiyUogk+z19OtHCmNyQpCv
        eypDdb50T7HFApqJJ9EEXYFn82DbSpsJpOXKNlL5ZLx2kpwjUG1LLN07KPMkWkHn02Yn8kv/1kq7l532
        mkRb8WpbIp0PIJ9rJWqrxieTfUenGcQxQbN9Umq+PiCspl9KzUIL8mRFI8NmAZKXSqcytSSQBdQijLlw
        f68tKOOK9qTlyrLQmFybjrkPsnWuEl7CE11buiGdO/f6NOzzpVSJrsmmdIwFuQiljWNVBs57RAf1ZEs3
        MsgYbYLA62fJidb7nnshjHtxXCsZGNdS8oO/ZEVbELP0fhal8t6DFpzX1gpz1YJjMXqLdC/Y110Lrmik
        6qH5zGVqiiqA19aLqoLX1gLPY4PHvPdaMfTa6lmIT6IlVpmpMpv286Df6KwTSOh50BTuZcUqmLbPaNLF
        VQsLfLhoQBjover1yTFaCCBhqwUkeM7e8liiJTMZ0zIupeodvQYtEK+tFQTwsF7bKJh3KZDMQc9nj2sX
        yFph9GPM2nEew0XDSDFbLBwL85SspTkTZOaicwWea7XVZq0w/bzdioYRcniwLSWnIDsXTHudwLe8StYI
        o6/67Vr0O5AGjgyq2Xmz+GoWIAvHwuJAWHrdu5etHiG6AwXeXlNA7TUPxtFX57UCaoXRrsUEzJVxHNuf
        u4ZpRSuI9louuwC5ZBkS7GKwmVeiNTNbx1mmLt1IQqz99PqBFgF9CLw99vp7tAhjTGT0m9EiehQh+gdB
        cMtufQQhehJC9CSE6EkI0ZMQoichRE9CiJ6EED0JIXoSQvQkhOgp+Hr8AbCSbvqq2WPlAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>